
# Setting the prefix from C-b to C-a
set -g prefix C-a
####################### Free the original Ctrl-b prefix keybinding
unbind C-b
#setting the delay between prefix and command
set -s escape-time 1
# Ensure that we can send Ctrl-A to other apps
#bind C-a send-prefix

# Set the base index for windows to 1 instead of 0
set -g base-index 1

# Set the base index for panes to 1 instead of 0
setw -g pane-base-index 1

# Reload the file with Prefix r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# splitting panes with | and -
bind | split-window -h
bind - split-window -v

# moving between panes with Prefix h,j,k,l
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Quick window selection
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Pane resizing panes with Prefix H,J,K,L
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
# mouse support - set to on if you want to use the mouse
#set-window-option -g mouse-mode on 
#set-option -g mouse-select-window on 
#set-option -g mouse-select-pane on 
#set-option -g mouse-resize-pane on

# Set the default terminal mode to 256color mode
set -g default-terminal "screen-256color"

# set the status line's colors
set-option -g status-bg black
set-option -g status-fg white

# set the color of the window list
set-window-option -g window-status-fg cyan
set-window-option -g window-status-bg black

# set colors for the active window
set-window-option -g window-status-current-bg red
set-window-option -g window-status-current-fg white

# colors for pane borders
set-option -g pane-border-fg green
set-option -g pane-border-bg black
set-option -g pane-active-border-fg blue
set-option -g pane-active-border-bg yellow

# active pane normal, other shaded out
#setw -g window-style fg=colour240,bg=colour235
#setw -g window-active-style fg=white,bg=black

# Command / message line
#set -g message-style fg=white,bold,bg=black

# Status line left side to show Session:window:pane
set -g status-left-length 40
set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"

# Status line right side -  31-Oct 13:37
set -g status-right "#[fg=colour39]#h #[fg=cyan]%d %b %R"

# Update the status line every sixty seconds
set -g status-interval 60

# Center the window list in the status line
set -g status-justify centre

# enable activity alerts
setw -g monitor-activity on
set -g visual-activity on

# enable vi keys.
setw -g mode-keys vi

# enable vi bindings in Copy mode
bind Escape copy-mode
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection 
unbind p 
bind p paste-buffer

# shortcut for synchronize-panes toggle
bind C-s set-window-option synchronize-panes

# The following can be used with https://github.com/christoomey/vim-tmux-navigator
#is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
#bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
#bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
#bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
#bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
#bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
#bind C-l send-keys 'C-l'


# Notes for 1.8 and vim integration:
# This is a tweak of https://github.com/mislav/dotfiles/blob/master/bin/tmux-vim-select-pane
#which is linked from https://github.com/christoomey/vim-tmux-navigator as a possible fix for the vim integration.
#
#I couldn't get the original one to work right on tmux 1.8 so I fixed it up.
#
#These go into tmux config file:
#
#bind-key -n C-h run-shell "~/tmux-vim-select-pane -L"
#bind-key -n C-j run-shell "~/tmux-vim-select-pane -D"
#bind-key -n C-k run-shell "~/tmux-vim-select-pane -U"
#bind-key -n C-l run-shell "~/tmux-vim-select-pane -R"
#bind-key -n C-\ run-shell "~/tmux-vim-select-pane -l"
#bind C-l send-keys 'C-l'
#
#The new script is:
#
##!/bin/bash
## Like `tmux select-pane`, but sends a `<C-h/j/k/l>` keystroke if Vim is
## running in the current pane, or only one pane exists.
##set -e
#
#cmd="$(tmux list-panes -F '#{pane_active} #{pane_tty}' | grep '^1')"
#X=$(ps -o comm= -t $(echo $cmd | cut -f2 -d' ') | grep vim)
#isvim=$?
#pane_count="$(printf %d $(tmux list-panes | wc -l))"
#
#if [[ ($isvim = 0) || ($pane_count = 1) ]]; then
##if [ $isvim -eq 0 ]; then
#  direction="$(echo "${1#-}" | tr 'lLDUR' '\\hjkl')"
#  # forward the keystroke to Vim
#  tmux send-keys "C-$direction"
#else
#  tmux select-pane "$@"
#fi

